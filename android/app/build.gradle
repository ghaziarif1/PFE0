apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * Configuration pour personnaliser votre application Android React Native.
 */
react {
    /* Folders */
    // Définissez le chemin racine de votre projet, c'est-à-dire où se trouve "package.json". Par défaut, c'est '../..'
    // root = file("../../")
    // Dossier où se trouve le paquet NPM react-native. Par défaut c'est ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    // Dossier où se trouve le paquet Codegen de react-native. Par défaut c'est ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    // Fichier cli.js qui est le point d'entrée de la CLI React Native. Par défaut c'est ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    // Liste des variantes qui sont débogables. Par défaut, c'est juste 'debug'.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    // Commande et ses options pour le bundling. Par défaut, c'est juste 'node'.
    // nodeExecutableAndArgs = ["node"]
    // Commande à exécuter lors du bundling. Par défaut, c'est 'bundle'.
    // bundleCommand = "ram-bundle"
    // Chemin vers le fichier de configuration CLI. Par défaut, c'est vide.
    // bundleConfig = file(../rn-cli.config.js)
    // Nom du fichier d'actif généré contenant votre bundle JS.
    // bundleAssetName = "MyApplication.android.bundle"
    // Fichier d'entrée pour la génération de bundle. Par défaut, c'est 'index.android.js' ou 'index.js'.
    // entryFile = file("../js/MyApplication.android.js")
    // Liste des options supplémentaires à passer aux commandes de 'bundle'.
    // extraPackagerArgs = []

    /* Hermes Commands */
    // Commande du compilateur Hermes à exécuter. Par défaut, c'est 'hermesc'.
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // Liste des options à passer au compilateur Hermes. Par défaut, c'est "-O", "-output-source-map".
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Définir ceci sur true pour exécuter Proguard sur les builds de Release pour minifier le bytecode Java.
 */
def enableProguardInReleaseBuilds = false

/**
 * La variante de build préférée de JavaScriptCore (JSC).
 * Par exemple, pour utiliser la variante internationale, vous pouvez utiliser :
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 * La variante internationale inclut la bibliothèque ICU i18n et les données nécessaires.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    compileSdkVersion 35
    ndkVersion "28.0.13004108"
    buildToolsVersion "35.0.1"
    namespace "com.est"
    defaultConfig {
        applicationId "com.est"
        minSdkVersion 24
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation 'io.github.react-native-community:jsc-android:2026004.+'
    }
}